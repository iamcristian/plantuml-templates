@startuml

scale 650 width
skinparam monochrome true
autonumber

== Sample Web Shop ==

actor Customer as "Customer"
participant App as "App"
participant Browser as "Browser"
participant WebServer as "Web Server"
participant Backend as "SEQR"

Customer->Browser: Open shop page
Browser->WebServer: GET /shop
WebServer-->Browser: Shop page

Customer->Browser: Add item to cart
Browser->WebServer: POST /shop/additem
WebServer-->Browser: Updated page

Customer->Browser: Go to checkout with SEQR
Browser->WebServer: GET /shop/checkout

== SEQR Payment ==

WebServer->Backend: sendInvoice
Backend-->WebServer: Invoice Reference
WebServer-->Browser: Checkout page \nwith QR code
activate Browser
Browser->Browser: Wait for\npayment status
activate Browser
Browser->WebServer: GET /seqr/status

Customer->App: Start SEQR App
activate App
Customer->App: Press 'Tap here to scan'
App -> App: Start Camera
activate App
App ->Browser: << Scan QR code >>
Browser --> App: Invoice Reference
deactivate App

App->Backend: Fetch invoice
Backend-->App: Invoice
App -> App: Show invoice details
activate App
Customer->App: Press 'confirm'
deactivate App

App -> App: Show PIN dialog
activate App
Customer->App: Enter PIN code
App->Backend: Pay invoice
Backend-->App: Receipt
deactivate App
App -> App: Show payment confirmation
deactivate App

Backend-->WebServer: POST [notificationUrl]
WebServer->Backend: getPaymentStatus
Backend-->WebServer: PAID
WebServer-->Browser: Payment done
deactivate Browser
Browser-->WebServer: GET /shop/done
deactivate Browser
WebServer->Browser: Receipt page

@enduml